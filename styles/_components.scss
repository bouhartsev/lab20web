@use "sass:color";
@use '_base' as base;

.on-hover {
    transition-property: stroke, color;
    transition-duration: 0.2s;
}
.on-hover:hover {
    color: base.$hover-color;
    // fill: base.$hover-color;
    stroke: base.$hover-color;
}

.menu__link {
    opacity: 0;
    transform: translateX(100%) scale(0.1);
    transition-property: opacity, transform;
    @include base.burger-transition;

    display: inline-block;
    width: fit-content;
    height: fit-content;
    margin: 0 0.5em;

    .link__icon {
        @include base.icon;
        @extend .on-hover;
        fill: none;
        // fill: color.adjust(base.$base-color, $lightness: 100%);
        stroke: color.adjust(base.$base-color, $lightness: 100%);
    }

    &:focus>* {
        @extend :hover;
    }
}

.burger {
    z-index: 2;

    &__check {
        width: 0;
        margin: 0;
    }

    &__check:checked ~ a {
        opacity: 1;
        transform: translateX(0);
    }

    &__check:focus ~ .menu__burger &__icon, &__icon:hover {
        stroke: base.$hover-color;
    }

    &__icon {
        @include base.icon;

        stroke: color.adjust(base.$base-color, $lightness: 100%);
        transition: stroke 0.2s linear;

        * {
            fill: none;
            stroke: inherit;
            stroke-width: 6;
            transition-property: stroke-dasharray, stroke-dashoffset;
            @include base.burger-transition;
        }
        >*:nth-child(1) {
            stroke-dasharray: 60 207;
        }
        >*:nth-child(2) {
            stroke-dasharray: 60 60;
        }
        >*:nth-child(3) {
            stroke-dasharray: 60 207;
        }
    }

    &__check:checked ~ .menu__burger &__icon {
        >*:nth-child(1) {
            stroke-dasharray: 90 207;
            stroke-dashoffset: -134;
        }
        >*:nth-child(2) {
            stroke-dasharray: 1 60;
            stroke-dashoffset: -30;
        }
        >*:nth-child(3) {
            stroke-dasharray: 90 207;
            stroke-dashoffset: -134;
        }
    }
}

.lamp {

    width: 800px;

    >* {
        fill: none;
        stroke: black;
        stroke-width: 10px;
        stroke-linecap: round;
        stroke-linejoin: round;
        stroke-miterlimit: 10;
    }

    &__ray {
        stroke: yellow;
        visibility: hidden;
    }

    &__container.on &__light {
        fill: yellow;
    }

    &__container.on &__ray {
        visibility: visible;
    }

    &__btn {
        cursor: pointer;

        .btn__circle {
            fill: red;
        }

        .btn__text {
            font-size: 40px;
            stroke: none;
            fill: white;
        }
    }

    &__container.on .btn__circle {
        fill: green;
    }

    &__table {
        stroke: rgba(255, 230, 0, 0.753);
        visibility: hidden;
    }

    &__container.on &__table {
        visibility: visible;
    }
}

#btnModalOpen {
    // position: absolute;
    $btn-color: black;

    background: $btn-color;
    color: white;
    font-size: 30px;
    padding: 20px;
    // box-shadow: $btn-color 1px -1px 0,
    //     $btn-color 2px -2px 0,
    //     $btn-color 3px -3px 0,
    //     $btn-color 4px -4px 0,
    //     $btn-color 5px -5px 0,
    //     $btn-color 6px -6px 0,
    //     $btn-color 7px -7px 0,
    //     $btn-color 8px -8px 0;
    // box-shadow: @for $i from 1 through 3 {
    //     $btn-color 2px * $i 2px 0,
    //   };
}

.modal {
    position: absolute;
    top: var(--top-scroll);
    left: 0; 
    right: 0;
    margin: 10vh auto;
    
    padding: 10px;
    width: 300px;
    max-width: 100%;
    box-sizing: border-box;

    z-index: 3;

    visibility: visible;
    opacity: 1;

    @include base.burger-transition;
    transition-property: visibility, opacity;

    &[data-visibility=false] {
        visibility: hidden;
        opacity: 0;
    }

    &::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: white;
        z-index: -1;
    }
    
    &::before {
        content: '';
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background-color: rgba($color: #000000, $alpha: 0.5);
        z-index: -2;
    }

    &__close {
        position: absolute;
        right: 10px;
        width: 30px;
        height: 30px;

        border-radius: 100%;
        overflow: hidden;
        padding: 0;
        border: none;
        background: none;

        >* {
            width: 100%;
            @extend .on-hover;
            stroke-width: 4px;
            stroke: black;
        }
    }

    &__clock {
        max-height: 30vh;
    }

    #time_text {
        font-family: 'Arial', sans-serif;
    }
}

.rickroll {
    text-decoration: underline;
}